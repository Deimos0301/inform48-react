{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport * as Classes from \"../../common/classes\";\nimport * as Errors from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { PortalContext } from \"../../context/portal/portalProvider\";\nimport { usePrevious } from \"../../hooks/usePrevious\";\nvar REACT_CONTEXT_TYPES = {\n  blueprintPortalClassName: function (obj, key) {\n    if (obj[key] != null && typeof obj[key] !== \"string\") {\n      return new Error(Errors.PORTAL_CONTEXT_CLASS_NAME_STRING);\n    }\n\n    return undefined;\n  }\n};\n/**\n * This component detaches its contents and re-attaches them to document.body.\n * Use it when you need to circumvent DOM z-stacking (for dialogs, popovers, etc.).\n * Any class names passed to this element will be propagated to the new container element on document.body.\n */\n\nexport function Portal(props, legacyContext) {\n  if (legacyContext === void 0) {\n    legacyContext = {};\n  }\n\n  var context = React.useContext(PortalContext);\n\n  var _a = React.useState(false),\n      hasMounted = _a[0],\n      setHasMounted = _a[1];\n\n  var _b = React.useState(),\n      portalElement = _b[0],\n      setPortalElement = _b[1];\n\n  var createContainerElement = React.useCallback(function () {\n    var container = document.createElement(\"div\");\n    container.classList.add(Classes.PORTAL);\n    maybeAddClass(container.classList, props.className); // directly added to this portal element\n\n    maybeAddClass(container.classList, context.portalClassName); // added via PortalProvider context\n\n    var blueprintPortalClassName = legacyContext.blueprintPortalClassName;\n\n    if (blueprintPortalClassName != null && blueprintPortalClassName !== \"\") {\n      console.error(Errors.PORTAL_LEGACY_CONTEXT_API);\n      maybeAddClass(container.classList, blueprintPortalClassName); // added via legacy context\n    }\n\n    return container;\n  }, [props.className, context.portalClassName]); // create the container element & attach it to the DOM\n\n  React.useEffect(function () {\n    if (props.container == null) {\n      return;\n    }\n\n    var newPortalElement = createContainerElement();\n    props.container.appendChild(newPortalElement);\n    setPortalElement(newPortalElement);\n    setHasMounted(true);\n    return function () {\n      newPortalElement.remove();\n      setHasMounted(false);\n      setPortalElement(undefined);\n    };\n  }, [props.container, createContainerElement]); // wait until next successful render to invoke onChildrenMount callback\n\n  React.useEffect(function () {\n    var _a;\n\n    if (hasMounted) {\n      (_a = props.onChildrenMount) === null || _a === void 0 ? void 0 : _a.call(props);\n    }\n  }, [hasMounted, props.onChildrenMount]); // update className prop on portal DOM element when props change\n\n  var prevClassName = usePrevious(props.className);\n  React.useEffect(function () {\n    if (portalElement != null) {\n      maybeRemoveClass(portalElement.classList, prevClassName);\n      maybeAddClass(portalElement.classList, props.className);\n    }\n  }, [props.className]); // Only render `children` once this component has mounted in a browser environment, so they are\n  // immediately attached to the DOM tree and can do DOM things like measuring or `autoFocus`.\n  // See long comment on componentDidMount in https://reactjs.org/docs/portals.html#event-bubbling-through-portals\n\n  if (typeof document === \"undefined\" || !hasMounted || portalElement == null) {\n    return null;\n  } else {\n    return ReactDOM.createPortal(props.children, portalElement);\n  }\n}\nPortal.defaultProps = {\n  container: typeof document !== \"undefined\" ? document.body : undefined\n};\nPortal.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Portal\");\nPortal.contextTypes = REACT_CONTEXT_TYPES;\n\nfunction maybeRemoveClass(classList, className) {\n  if (className != null && className !== \"\") {\n    classList.remove.apply(classList, className.split(\" \"));\n  }\n}\n\nfunction maybeAddClass(classList, className) {\n  if (className != null && className !== \"\") {\n    classList.add.apply(classList, className.split(\" \"));\n  }\n}","map":{"version":3,"mappings":"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","names":["React","ReactDOM","Classes","Errors","DISPLAYNAME_PREFIX","PortalContext","usePrevious","REACT_CONTEXT_TYPES","blueprintPortalClassName","obj","key","Error","PORTAL_CONTEXT_CLASS_NAME_STRING","undefined","Portal","props","legacyContext","context","useContext","useState","hasMounted","setHasMounted","portalElement","setPortalElement","createContainerElement","useCallback","container","document","createElement","classList","add","PORTAL","maybeAddClass","className","portalClassName","console","error","PORTAL_LEGACY_CONTEXT_API","useEffect","newPortalElement","appendChild","remove","onChildrenMount","_a","prevClassName","maybeRemoveClass","createPortal","children","defaultProps","body","displayName","contextTypes","apply","split"],"sources":["/home/administrator/Рабочий стол/inform48-react/inform48/node_modules/@blueprintjs/core/src/components/portal/portal.tsx"],"sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport * as Classes from \"../../common/classes\";\nimport { ValidationMap } from \"../../common/context\";\nimport * as Errors from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX, Props } from \"../../common/props\";\nimport { PortalContext } from \"../../context/portal/portalProvider\";\nimport { usePrevious } from \"../../hooks/usePrevious\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type PortalProps = IPortalProps;\n/** @deprecated use PortalProps */\nexport interface IPortalProps extends Props {\n    /** Contents to send through the portal. */\n    children: React.ReactNode;\n\n    /**\n     * Callback invoked when the children of this `Portal` have been added to the DOM.\n     */\n    onChildrenMount?: () => void;\n\n    /**\n     * The HTML element that children will be mounted to.\n     *\n     * @default document.body\n     */\n    container?: HTMLElement;\n}\n\n/** @deprecated use PortalProvider */\nexport type IPortalContext = PortalLegacyContext;\nexport interface PortalLegacyContext {\n    /** Additional CSS classes to add to all `Portal` elements in this React context. */\n    blueprintPortalClassName?: string;\n}\n\nconst REACT_CONTEXT_TYPES: ValidationMap<PortalLegacyContext> = {\n    blueprintPortalClassName: (obj: PortalLegacyContext, key: keyof PortalLegacyContext) => {\n        if (obj[key] != null && typeof obj[key] !== \"string\") {\n            return new Error(Errors.PORTAL_CONTEXT_CLASS_NAME_STRING);\n        }\n        return undefined;\n    },\n};\n\n/**\n * This component detaches its contents and re-attaches them to document.body.\n * Use it when you need to circumvent DOM z-stacking (for dialogs, popovers, etc.).\n * Any class names passed to this element will be propagated to the new container element on document.body.\n */\nexport function Portal(props: PortalProps, legacyContext: PortalLegacyContext = {}) {\n    const context = React.useContext(PortalContext);\n\n    const [hasMounted, setHasMounted] = React.useState(false);\n    const [portalElement, setPortalElement] = React.useState<HTMLElement>();\n\n    const createContainerElement = React.useCallback(() => {\n        const container = document.createElement(\"div\");\n        container.classList.add(Classes.PORTAL);\n        maybeAddClass(container.classList, props.className); // directly added to this portal element\n        maybeAddClass(container.classList, context.portalClassName); // added via PortalProvider context\n\n        const { blueprintPortalClassName } = legacyContext;\n        if (blueprintPortalClassName != null && blueprintPortalClassName !== \"\") {\n            console.error(Errors.PORTAL_LEGACY_CONTEXT_API);\n            maybeAddClass(container.classList, blueprintPortalClassName); // added via legacy context\n        }\n\n        return container;\n    }, [props.className, context.portalClassName]);\n\n    // create the container element & attach it to the DOM\n    React.useEffect(() => {\n        if (props.container == null) {\n            return;\n        }\n        const newPortalElement = createContainerElement();\n        props.container.appendChild(newPortalElement);\n        setPortalElement(newPortalElement);\n        setHasMounted(true);\n\n        return () => {\n            newPortalElement.remove();\n            setHasMounted(false);\n            setPortalElement(undefined);\n        };\n    }, [props.container, createContainerElement]);\n\n    // wait until next successful render to invoke onChildrenMount callback\n    React.useEffect(() => {\n        if (hasMounted) {\n            props.onChildrenMount?.();\n        }\n    }, [hasMounted, props.onChildrenMount]);\n\n    // update className prop on portal DOM element when props change\n    const prevClassName = usePrevious(props.className);\n    React.useEffect(() => {\n        if (portalElement != null) {\n            maybeRemoveClass(portalElement.classList, prevClassName);\n            maybeAddClass(portalElement.classList, props.className);\n        }\n    }, [props.className]);\n\n    // Only render `children` once this component has mounted in a browser environment, so they are\n    // immediately attached to the DOM tree and can do DOM things like measuring or `autoFocus`.\n    // See long comment on componentDidMount in https://reactjs.org/docs/portals.html#event-bubbling-through-portals\n    if (typeof document === \"undefined\" || !hasMounted || portalElement == null) {\n        return null;\n    } else {\n        return ReactDOM.createPortal(props.children, portalElement);\n    }\n}\nPortal.defaultProps = {\n    container: typeof document !== \"undefined\" ? document.body : undefined,\n};\nPortal.displayName = `${DISPLAYNAME_PREFIX}.Portal`;\nPortal.contextTypes = REACT_CONTEXT_TYPES;\n\nfunction maybeRemoveClass(classList: DOMTokenList, className?: string) {\n    if (className != null && className !== \"\") {\n        classList.remove(...className.split(\" \"));\n    }\n}\n\nfunction maybeAddClass(classList: DOMTokenList, className?: string) {\n    if (className != null && className !== \"\") {\n        classList.add(...className.split(\" \"));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}