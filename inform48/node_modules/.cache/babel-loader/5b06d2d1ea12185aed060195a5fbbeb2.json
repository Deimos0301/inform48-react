{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Intent } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { MultiSlider } from \"./multiSlider\";\n\nvar Slider =\n/** @class */\nfunction (_super) {\n  __extends(Slider, _super);\n\n  function Slider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Slider.prototype.render = function () {\n    var _a = this.props,\n        initialValue = _a.initialValue,\n        intent = _a.intent,\n        value = _a.value,\n        onChange = _a.onChange,\n        onRelease = _a.onRelease,\n        handleHtmlProps = _a.handleHtmlProps,\n        props = __rest(_a, [\"initialValue\", \"intent\", \"value\", \"onChange\", \"onRelease\", \"handleHtmlProps\"]);\n\n    return React.createElement(MultiSlider, __assign({}, props), React.createElement(MultiSlider.Handle, {\n      value: value,\n      intentAfter: value < initialValue ? intent : undefined,\n      intentBefore: value >= initialValue ? intent : undefined,\n      onChange: onChange,\n      onRelease: onRelease,\n      htmlProps: handleHtmlProps\n    }), React.createElement(MultiSlider.Handle, {\n      value: initialValue,\n      interactionKind: \"none\"\n    }));\n  };\n\n  Slider.defaultProps = __assign(__assign({}, MultiSlider.defaultSliderProps), {\n    initialValue: 0,\n    intent: Intent.PRIMARY,\n    value: 0\n  });\n  Slider.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Slider\");\n  return Slider;\n}(AbstractPureComponent2);\n\nexport { Slider };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,sBAAT,EAAiCC,MAAjC,QAA+C,cAA/C;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AAEA,SAA2BC,WAA3B,QAA8C,eAA9C;;AA+BA;AAAA;AAAA;EAA4BC;;EAA5B;;EA0BC;;EAhBUC,0BAAP;IACI,IAAMC,KAAkF,KAAKC,KAA7F;IAAA,IAAQC,YAAY,kBAApB;IAAA,IAAsBC,MAAM,YAA5B;IAAA,IAA8BC,KAAK,WAAnC;IAAA,IAAqCC,QAAQ,cAA7C;IAAA,IAA+CC,SAAS,eAAxD;IAAA,IAA0DC,eAAe,qBAAzE;IAAA,IAA8EN,KAAK,cAA7E,+EAA6E,CAAnF;;IACA,OACIR,oBAACI,WAAD,EAAYW,aAAKP,KAAL,CAAZ,EACIR,oBAACI,WAAW,CAACY,MAAb,EAAmB;MACfL,KAAK,EAAEA,KADQ;MAEfM,WAAW,EAAEN,KAAM,GAAGF,YAAT,GAAyBC,MAAzB,GAAkCQ,SAFhC;MAGfC,YAAY,EAAER,KAAM,IAAIF,YAAV,GAA0BC,MAA1B,GAAmCQ,SAHlC;MAIfN,QAAQ,EAAEA,QAJK;MAKfC,SAAS,EAAEA,SALI;MAMfO,SAAS,EAAEN;IANI,CAAnB,CADJ,EASId,oBAACI,WAAW,CAACY,MAAb,EAAmB;MAACL,KAAK,EAAEF,YAAR;MAAuBY,eAAe,EAAC;IAAvC,CAAnB,CATJ,CADJ;EAaH,CAfM;;EATOf,sBAAYS,sBACnBX,WAAW,CAACkB,kBADO,GACW;IACjCb,YAAY,EAAE,CADmB;IAEjCC,MAAM,EAAER,MAAM,CAACqB,OAFkB;IAGjCZ,KAAK,EAAE;EAH0B,CADX,CAAZ;EAOAL,qBAAc,UAAGH,kBAAH,EAAqB,SAArB,CAAd;EAkBlB;AAAC,CA1BD,CAA4BF,sBAA5B;;SAAaK","names":["React","AbstractPureComponent2","Intent","DISPLAYNAME_PREFIX","MultiSlider","__extends","Slider","_a","props","initialValue","intent","value","onChange","onRelease","handleHtmlProps","__assign","Handle","intentAfter","undefined","intentBefore","htmlProps","interactionKind","defaultSliderProps","PRIMARY"],"sources":["/home/administrator/Рабочий стол/inform48-react/inform48/node_modules/@blueprintjs/core/src/components/slider/slider.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Intent } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { HandleHtmlProps } from \"./handleProps\";\nimport { ISliderBaseProps, MultiSlider } from \"./multiSlider\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type SliderProps = ISliderProps;\n/** @deprecated use SliderProps */\nexport interface ISliderProps extends ISliderBaseProps {\n    /**\n     * Initial value of the slider. This determines the other end of the\n     * track fill: from `initialValue` to `value`.\n     *\n     * @default 0\n     */\n    initialValue?: number;\n\n    /**\n     * Value of slider.\n     *\n     * @default 0\n     */\n    value?: number;\n\n    /** Callback invoked when the value changes. */\n    onChange?(value: number): void;\n\n    /** Callback invoked when the handle is released. */\n    onRelease?(value: number): void;\n\n    /** A limited subset of HTML props to apply to the slider Handle */\n    handleHtmlProps?: HandleHtmlProps;\n}\n\nexport class Slider extends AbstractPureComponent2<SliderProps> {\n    public static defaultProps: SliderProps = {\n        ...MultiSlider.defaultSliderProps,\n        initialValue: 0,\n        intent: Intent.PRIMARY,\n        value: 0,\n    };\n\n    public static displayName = `${DISPLAYNAME_PREFIX}.Slider`;\n\n    public render() {\n        const { initialValue, intent, value, onChange, onRelease, handleHtmlProps, ...props } = this.props;\n        return (\n            <MultiSlider {...props}>\n                <MultiSlider.Handle\n                    value={value!}\n                    intentAfter={value! < initialValue! ? intent : undefined}\n                    intentBefore={value! >= initialValue! ? intent : undefined}\n                    onChange={onChange}\n                    onRelease={onRelease}\n                    htmlProps={handleHtmlProps}\n                />\n                <MultiSlider.Handle value={initialValue!} interactionKind=\"none\" />\n            </MultiSlider>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}