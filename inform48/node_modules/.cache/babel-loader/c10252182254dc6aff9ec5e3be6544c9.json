{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign } from \"tslib\";\nimport * as React from \"react\";\nimport { DISPLAYNAME_PREFIX } from \"@blueprintjs/core\";\nimport * as Classes from \"./classes\";\nimport { getBasePlacement } from \"./utils\"; // these paths come from the Core Kit Sketch file\n// https://github.com/palantir/blueprint/blob/develop/resources/sketch/Core%20Kit.sketch\n\nvar SVG_SHADOW_PATH = \"M8.11 6.302c1.015-.936 1.887-2.922 1.887-4.297v26c0-1.378\" + \"-.868-3.357-1.888-4.297L.925 17.09c-1.237-1.14-1.233-3.034 0-4.17L8.11 6.302z\";\nvar SVG_ARROW_PATH = \"M8.787 7.036c1.22-1.125 2.21-3.376 2.21-5.03V0v30-2.005\" + \"c0-1.654-.983-3.9-2.21-5.03l-7.183-6.616c-.81-.746-.802-1.96 0-2.7l7.183-6.614z\"; // additional space between arrow and edge of target\n\nvar ARROW_SPACING = 4;\nexport var POPOVER_ARROW_SVG_SIZE = 30;\nexport var TOOLTIP_ARROW_SVG_SIZE = 22;\n/** Modifier helper function to compute arrow rotate() transform */\n\nfunction getArrowAngle(placement) {\n  if (placement == null) {\n    return 0;\n  } // can only be top/left/bottom/right - auto is resolved internally\n\n\n  switch (getBasePlacement(placement)) {\n    case \"top\":\n      return -90;\n\n    case \"left\":\n      return 180;\n\n    case \"bottom\":\n      return 90;\n\n    default:\n      return 0;\n  }\n}\n/**\n * Popper's builtin \"arrow\" modifier options.padding doesn't seem to work for us, so we\n * need to compute our own offset in the direction of the popover relative to the reference.\n */\n\n\nfunction getArrowReferenceOffsetStyle(placement) {\n  var offset = POPOVER_ARROW_SVG_SIZE / 2 - ARROW_SPACING;\n\n  switch (getBasePlacement(placement)) {\n    case \"top\":\n      return {\n        bottom: -offset\n      };\n\n    case \"left\":\n      return {\n        right: -offset\n      };\n\n    case \"bottom\":\n      return {\n        top: -offset\n      };\n\n    default:\n      return {\n        left: -offset\n      };\n  }\n}\n\nexport var Popover2Arrow = function (_a) {\n  var _b = _a.arrowProps,\n      ref = _b.ref,\n      style = _b.style,\n      placement = _a.placement;\n  return (// data attribute allows popper.js to position the arrow\n    React.createElement(\"div\", {\n      \"aria-hidden\": true,\n      className: Classes.POPOVER2_ARROW,\n      \"data-popper-arrow\": true,\n      ref: ref,\n      style: __assign(__assign({}, style), getArrowReferenceOffsetStyle(placement))\n    }, React.createElement(\"svg\", {\n      viewBox: \"0 0 \".concat(POPOVER_ARROW_SVG_SIZE, \" \").concat(POPOVER_ARROW_SVG_SIZE),\n      style: {\n        transform: \"rotate(\".concat(getArrowAngle(placement), \"deg)\")\n      }\n    }, React.createElement(\"path\", {\n      className: Classes.POPOVER2_ARROW + \"-border\",\n      d: SVG_SHADOW_PATH\n    }), React.createElement(\"path\", {\n      className: Classes.POPOVER2_ARROW + \"-fill\",\n      d: SVG_ARROW_PATH\n    })))\n  );\n};\nPopover2Arrow.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Popover2Arrow\");","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,SAASC,kBAAT,QAAmC,mBAAnC;AAEA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,SAASC,gBAAT,QAAiC,SAAjC,C,CAEA;AACA;;AACA,IAAMC,eAAe,GACjB,8DACA,+EAFJ;AAGA,IAAMC,cAAc,GAChB,4DACA,iFAFJ,C,CAIA;;AACA,IAAMC,aAAa,GAAG,CAAtB;AACA,OAAO,IAAMC,sBAAsB,GAAG,EAA/B;AACP,OAAO,IAAMC,sBAAsB,GAAG,EAA/B;AAEP;;AACA,SAASC,aAAT,CAAuBC,SAAvB,EAA4C;EACxC,IAAIA,SAAS,IAAI,IAAjB,EAAuB;IACnB,OAAO,CAAP;EACH,CAHuC,CAIxC;;;EACA,QAAQP,gBAAgB,CAACO,SAAD,CAAxB;IACI,KAAK,KAAL;MACI,OAAO,CAAC,EAAR;;IACJ,KAAK,MAAL;MACI,OAAO,GAAP;;IACJ,KAAK,QAAL;MACI,OAAO,EAAP;;IACJ;MACI,OAAO,CAAP;EARR;AAUH;AAED;;;;;;AAIA,SAASC,4BAAT,CAAsCD,SAAtC,EAA0D;EACtD,IAAME,MAAM,GAAGL,sBAAsB,GAAG,CAAzB,GAA6BD,aAA5C;;EACA,QAAQH,gBAAgB,CAACO,SAAD,CAAxB;IACI,KAAK,KAAL;MACI,OAAO;QAAEG,MAAM,EAAE,CAACD;MAAX,CAAP;;IACJ,KAAK,MAAL;MACI,OAAO;QAAEE,KAAK,EAAE,CAACF;MAAV,CAAP;;IACJ,KAAK,QAAL;MACI,OAAO;QAAEG,GAAG,EAAE,CAACH;MAAR,CAAP;;IACJ;MACI,OAAO;QAAEI,IAAI,EAAE,CAACJ;MAAT,CAAP;EARR;AAUH;;AAOD,OAAO,IAAMK,aAAa,GAAiC,UAACC,EAAD,EAA0C;MAAvCC;MAAcC,GAAG;MAAEC,KAAK;MAAIX,SAAS;EAAO,OACtG;IACAV;MAAA,eACiB,IADjB;MAEIsB,SAAS,EAAEpB,OAAO,CAACqB,cAFvB;MAEqC,qBACd,IAHvB;MAIIH,GAAG,EAAEA,GAJT;MAKIC,KAAK,wBACEA,KADF,GAEEV,4BAA4B,CAACD,SAAD,CAF9B;IALT,GAUIV;MACIwB,OAAO,EAAE,cAAOjB,sBAAP,EAA6B,GAA7B,EAA6BkB,MAA7B,CAAiClB,sBAAjC,CADb;MAEIc,KAAK,EAAE;QAAEK,SAAS,EAAE,iBAAUjB,aAAa,CAACC,SAAD,CAAvB,EAAkC,MAAlC;MAAb;IAFX,GAIIV;MAAMsB,SAAS,EAAEpB,OAAO,CAACqB,cAAR,GAAyB,SAA1C;MAAqDI,CAAC,EAAEvB;IAAxD,EAJJ,EAKIJ;MAAMsB,SAAS,EAAEpB,OAAO,CAACqB,cAAR,GAAyB,OAA1C;MAAmDI,CAAC,EAAEtB;IAAtD,EALJ,CAVJ;EAFsG;AAoBzG,CApBM;AAqBPY,aAAa,CAACW,WAAd,GAA4B,UAAG3B,kBAAH,EAAqB,gBAArB,CAA5B","names":["React","DISPLAYNAME_PREFIX","Classes","getBasePlacement","SVG_SHADOW_PATH","SVG_ARROW_PATH","ARROW_SPACING","POPOVER_ARROW_SVG_SIZE","TOOLTIP_ARROW_SVG_SIZE","getArrowAngle","placement","getArrowReferenceOffsetStyle","offset","bottom","right","top","left","Popover2Arrow","_a","_b","ref","style","className","POPOVER2_ARROW","viewBox","concat","transform","d","displayName"],"sources":["/home/administrator/Рабочий стол/inform48-react/inform48/node_modules/@blueprintjs/popover2/src/popover2Arrow.tsx"],"sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Placement } from \"@popperjs/core\";\nimport * as React from \"react\";\nimport { PopperArrowProps } from \"react-popper\";\n\nimport { DISPLAYNAME_PREFIX } from \"@blueprintjs/core\";\n\nimport * as Classes from \"./classes\";\nimport { getBasePlacement } from \"./utils\";\n\n// these paths come from the Core Kit Sketch file\n// https://github.com/palantir/blueprint/blob/develop/resources/sketch/Core%20Kit.sketch\nconst SVG_SHADOW_PATH =\n    \"M8.11 6.302c1.015-.936 1.887-2.922 1.887-4.297v26c0-1.378\" +\n    \"-.868-3.357-1.888-4.297L.925 17.09c-1.237-1.14-1.233-3.034 0-4.17L8.11 6.302z\";\nconst SVG_ARROW_PATH =\n    \"M8.787 7.036c1.22-1.125 2.21-3.376 2.21-5.03V0v30-2.005\" +\n    \"c0-1.654-.983-3.9-2.21-5.03l-7.183-6.616c-.81-.746-.802-1.96 0-2.7l7.183-6.614z\";\n\n// additional space between arrow and edge of target\nconst ARROW_SPACING = 4;\nexport const POPOVER_ARROW_SVG_SIZE = 30;\nexport const TOOLTIP_ARROW_SVG_SIZE = 22;\n\n/** Modifier helper function to compute arrow rotate() transform */\nfunction getArrowAngle(placement?: Placement) {\n    if (placement == null) {\n        return 0;\n    }\n    // can only be top/left/bottom/right - auto is resolved internally\n    switch (getBasePlacement(placement)) {\n        case \"top\":\n            return -90;\n        case \"left\":\n            return 180;\n        case \"bottom\":\n            return 90;\n        default:\n            return 0;\n    }\n}\n\n/**\n * Popper's builtin \"arrow\" modifier options.padding doesn't seem to work for us, so we\n * need to compute our own offset in the direction of the popover relative to the reference.\n */\nfunction getArrowReferenceOffsetStyle(placement: Placement) {\n    const offset = POPOVER_ARROW_SVG_SIZE / 2 - ARROW_SPACING;\n    switch (getBasePlacement(placement)) {\n        case \"top\":\n            return { bottom: -offset };\n        case \"left\":\n            return { right: -offset };\n        case \"bottom\":\n            return { top: -offset };\n        default:\n            return { left: -offset };\n    }\n}\n\nexport interface IPopoverArrowProps {\n    arrowProps: PopperArrowProps;\n    placement: Placement;\n}\n\nexport const Popover2Arrow: React.FC<IPopoverArrowProps> = ({ arrowProps: { ref, style }, placement }) => (\n    // data attribute allows popper.js to position the arrow\n    <div\n        aria-hidden={true}\n        className={Classes.POPOVER2_ARROW}\n        data-popper-arrow={true}\n        ref={ref}\n        style={{\n            ...style,\n            ...getArrowReferenceOffsetStyle(placement),\n        }}\n    >\n        <svg\n            viewBox={`0 0 ${POPOVER_ARROW_SVG_SIZE} ${POPOVER_ARROW_SVG_SIZE}`}\n            style={{ transform: `rotate(${getArrowAngle(placement)}deg)` }}\n        >\n            <path className={Classes.POPOVER2_ARROW + \"-border\"} d={SVG_SHADOW_PATH} />\n            <path className={Classes.POPOVER2_ARROW + \"-fill\"} d={SVG_ARROW_PATH} />\n        </svg>\n    </div>\n);\nPopover2Arrow.displayName = `${DISPLAYNAME_PREFIX}.Popover2Arrow`;\n"]},"metadata":{},"sourceType":"module"}