{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from \"react\";\n\nvar noOpDispatch = function () {\n  return null;\n};\n\nexport var Tooltip2Context = React.createContext([{}, noOpDispatch]);\n\nvar tooltip2Reducer = function (state, action) {\n  switch (action.type) {\n    case \"FORCE_DISABLED_STATE\":\n      return {\n        forceDisabled: true\n      };\n\n    case \"RESET_DISABLED_STATE\":\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport var Tooltip2Provider = function (_a) {\n  var children = _a.children,\n      forceDisable = _a.forceDisable;\n\n  var _b = React.useReducer(tooltip2Reducer, {}),\n      state = _b[0],\n      dispatch = _b[1];\n\n  React.useEffect(function () {\n    if (forceDisable) {\n      dispatch({\n        type: \"FORCE_DISABLED_STATE\"\n      });\n    } else {\n      dispatch({\n        type: \"RESET_DISABLED_STATE\"\n      });\n    }\n  }, [forceDisable]);\n  return React.createElement(Tooltip2Context.Provider, {\n    value: [state, dispatch]\n  }, typeof children === \"function\" ? children(state) : children);\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAOA,IAAMC,YAAY,GAAmC;EAAM;AAAI,CAA/D;;AAEA,OAAO,IAAMC,eAAe,GAAGF,KAAK,CAACG,aAAN,CAA4E,CACvG,EADuG,EAEvGF,YAFuG,CAA5E,CAAxB;;AAKP,IAAMG,eAAe,GAAG,UAACC,KAAD,EAA8BC,MAA9B,EAAoD;EACxE,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,sBAAL;MACI,OAAO;QAAEC,aAAa,EAAE;MAAjB,CAAP;;IACJ,KAAK,sBAAL;MACI,OAAO,EAAP;;IACJ;MACI,OAAOH,KAAP;EANR;AAQH,CATD;;AAgBA,OAAO,IAAMI,gBAAgB,GAAG,UAACC,EAAD,EAAkD;MAA/CC,QAAQ;MAAEC,YAAY;;EAC/C,SAAoBZ,KAAK,CAACa,UAAN,CAAiBT,eAAjB,EAAkC,EAAlC,CAApB;EAAA,IAACC,KAAK,QAAN;EAAA,IAAQS,QAAQ,QAAhB;;EAENd,KAAK,CAACe,SAAN,CAAgB;IACZ,IAAIH,YAAJ,EAAkB;MACdE,QAAQ,CAAC;QAAEP,IAAI,EAAE;MAAR,CAAD,CAAR;IACH,CAFD,MAEO;MACHO,QAAQ,CAAC;QAAEP,IAAI,EAAE;MAAR,CAAD,CAAR;IACH;EACJ,CAND,EAMG,CAACK,YAAD,CANH;EAQA,OACIZ,oBAACE,eAAe,CAACc,QAAjB,EAAyB;IAACC,KAAK,EAAE,CAACZ,KAAD,EAAQS,QAAR;EAAR,CAAzB,EACK,OAAOH,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACN,KAAD,CAAzC,GAAmDM,QADxD,CADJ;AAKH,CAhBM","names":["React","noOpDispatch","Tooltip2Context","createContext","tooltip2Reducer","state","action","type","forceDisabled","Tooltip2Provider","_a","children","forceDisable","useReducer","dispatch","useEffect","Provider","value"],"sources":["/home/administrator/Рабочий стол/inform48-react/inform48/node_modules/@blueprintjs/popover2/src/tooltip2Context.tsx"],"sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nexport interface Tooltip2ContextState {\n    forceDisabled?: boolean;\n}\n\ntype Tooltip2Action = { type: \"FORCE_DISABLED_STATE\" } | { type: \"RESET_DISABLED_STATE\" };\nconst noOpDispatch: React.Dispatch<Tooltip2Action> = () => null;\n\nexport const Tooltip2Context = React.createContext<[Tooltip2ContextState, React.Dispatch<Tooltip2Action>]>([\n    {},\n    noOpDispatch,\n]);\n\nconst tooltip2Reducer = (state: Tooltip2ContextState, action: Tooltip2Action) => {\n    switch (action.type) {\n        case \"FORCE_DISABLED_STATE\":\n            return { forceDisabled: true };\n        case \"RESET_DISABLED_STATE\":\n            return {};\n        default:\n            return state;\n    }\n};\n\ninterface Tooltip2ProviderProps {\n    children: React.ReactNode | ((ctxState: Tooltip2ContextState) => React.ReactNode);\n    forceDisable?: boolean;\n}\n\nexport const Tooltip2Provider = ({ children, forceDisable }: Tooltip2ProviderProps) => {\n    const [state, dispatch] = React.useReducer(tooltip2Reducer, {});\n\n    React.useEffect(() => {\n        if (forceDisable) {\n            dispatch({ type: \"FORCE_DISABLED_STATE\" });\n        } else {\n            dispatch({ type: \"RESET_DISABLED_STATE\" });\n        }\n    }, [forceDisable]);\n\n    return (\n        <Tooltip2Context.Provider value={[state, dispatch]}>\n            {typeof children === \"function\" ? children(state) : children}\n        </Tooltip2Context.Provider>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}